services:
  nginx:
    build:
      context: .  # Dockerfile이 있는 디렉터리 경로 (현재 디렉터리)
      dockerfile: Main_Nginx_Dockerfile  # Main_Nginx_Dockerfile 이름 (기본적으로 'Main_Nginx_Dockerfile'이므로 생략 가능)
      args:
        DOMAINS: "seoktae2.duckdns.org " # 사용할 도메인 배열 [여기에서 배열은 띄어쓰기로 구분]
        EMAIL: "dhstjrxo123@gmail.com" # 이메일
    container_name: main_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./sites-available/:/etc/nginx/sites-available  # 현재 디렉토리 기준
      - ./nginx.conf:/etc/nginx/nginx.conf  # 현재 디렉토리 기준
      - ./entrypoint.sh:/usr/local/bin/entrypoint.sh  # 호스트의 entrypoint.sh를 컨테이너에 마운트
      - ./certbot-webroot:/var/www/certbot  # nginx와 certbot 간의 공유 디렉토리
    entrypoint: [ "/bin/bash", "/usr/local/bin/entrypoint.sh" ]  # entrypoint.sh 실행
    restart: always

  certbot:
    build:
      context: .  # Dockerfile이 있는 디렉터리 경로 (현재 디렉터리)
      dockerfile: cert_Dockerfile  # Main_Nginx_Dockerfile 이름 (기본적으로 'Main_Nginx_Dockerfile'이므로 생략 가능)
    container_name: certbot
    depends_on:
      - nginx
    volumes:
      - ./new_certificates.sh:/scripts/new_certificates.sh  # 인증서 발급 스크립트 [더미 인증서재거 + 신규발급]
      - ./renew_certificates.sh:/scripts/renew_certificates.sh  # 크론을 사용한 인증서 재발급 스크립트
      - ./data/certbot:/etc/letsencrypt  # 인증서 저장 경로
      - ./certbot-webroot:/var/www/certbot  # 인증서 검증을 위한 웹 루트
    environment:
      - DOMAINS=seoktae2.duckdns.org  # 인증서 발급에 사용할 도메인 [ 여러 도메인을 띄어쓰기로 구분하여 전달 ]
      - EMAIL=dhstjrxo123@gmail.com  # 이메일
    entrypoint: [ "/bin/bash", "/scripts/new_certificates.sh" ]  # entrypoint.sh 실행
    restart: on-failure